package com.example.dogsapplication.dogpicture

import androidx.lifecycle.*
import com.example.dogsapplication.database.Dog
import kotlinx.coroutines.launch

class DogViewModel(val repository: DogRepository) : ViewModel() {
    private val _currentDog = MutableLiveData<Dog>()
    val currentDog: LiveData<Dog>
        get() = _currentDog


    /**
     * Get new dog from the api and save it to db
     *
     */
    fun getNewDog() {
        viewModelScope.launch {
            repository.getNewDogAndSaveToDb()
            getLatestDog()

        }
    }


    /**
     * Get latest dog from the database as per the highest autogenerated id
     *
     */
    private fun getLatestDog() {
        viewModelScope.launch {
            _currentDog.value = repository.getLatestDog()
        }
    }


    /**
     * Update current dog to be shown in dog picture fragment
     *
     * @param dogId
     */
    fun updateCurrentDog(dogId: Long) {
        viewModelScope.launch {
            _currentDog.value = repository.getDogById(dogId)
        }
    }


}

